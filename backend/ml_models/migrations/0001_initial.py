# Generated by Django 5.2.4 on 2025-08-18 19:38

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Model Name')),
                ('model_type', models.CharField(choices=[('rnn', 'RNN Recurrent Neural Network'), ('lstm', 'LSTM Long Short-Term Memory'), ('gru', 'GRU Gated Recurrent Unit'), ('cnn', 'CNN Convolutional Neural Network'), ('transformer', 'Transformer')], max_length=20, verbose_name='Model Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Model Description')),
                ('version', models.CharField(default='1.0.0', max_length=20, verbose_name='Version')),
                ('status', models.CharField(choices=[('training', 'Training'), ('completed', 'Training Completed'), ('failed', 'Training Failed'), ('active', 'Active'), ('deprecated', 'Deprecated')], default='training', max_length=20, verbose_name='Status')),
                ('sequence_length', models.IntegerField(default=60, verbose_name='Sequence Length')),
                ('prediction_days', models.IntegerField(default=1, verbose_name='Prediction Days')),
                ('hidden_units', models.IntegerField(default=50, verbose_name='Hidden Units')),
                ('learning_rate', models.FloatField(default=0.001, verbose_name='Learning Rate')),
                ('epochs', models.IntegerField(default=100, verbose_name='Training Epochs')),
                ('batch_size', models.IntegerField(default=32, verbose_name='Batch Size')),
                ('train_loss', models.FloatField(blank=True, null=True, verbose_name='Training Loss')),
                ('val_loss', models.FloatField(blank=True, null=True, verbose_name='Validation Loss')),
                ('accuracy', models.FloatField(blank=True, null=True, verbose_name='Accuracy')),
                ('mae', models.FloatField(blank=True, null=True, verbose_name='Mean Absolute Error')),
                ('rmse', models.FloatField(blank=True, null=True, verbose_name='Root Mean Square Error')),
                ('model_file_path', models.CharField(blank=True, max_length=255, null=True, verbose_name='Model File Path')),
                ('weights_file_path', models.CharField(blank=True, max_length=255, null=True, verbose_name='Weights File Path')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('trained_at', models.DateTimeField(blank=True, null=True, verbose_name='Training Completed At')),
            ],
            options={
                'verbose_name': 'Machine Learning Model',
                'verbose_name_plural': 'Machine Learning Models',
                'db_table': 'ml_models',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModelTrainingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('started', 'Training Started'), ('processing', 'Training In Progress'), ('completed', 'Training Completed'), ('failed', 'Training Failed'), ('cancelled', 'Training Cancelled')], default='started', max_length=20, verbose_name='Status')),
                ('training_data_size', models.IntegerField(default=0, verbose_name='Training Data Size')),
                ('validation_data_size', models.IntegerField(default=0, verbose_name='Validation Data Size')),
                ('current_epoch', models.IntegerField(default=0, verbose_name='Current Epoch')),
                ('total_epochs', models.IntegerField(default=0, verbose_name='Total Epochs')),
                ('progress_percentage', models.FloatField(default=0.0, verbose_name='Progress Percentage')),
                ('final_train_loss', models.FloatField(blank=True, null=True, verbose_name='Final Training Loss')),
                ('final_val_loss', models.FloatField(blank=True, null=True, verbose_name='Final Validation Loss')),
                ('training_time_seconds', models.IntegerField(blank=True, null=True, verbose_name='Training Time (Seconds)')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Error Message')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
            ],
            options={
                'verbose_name': 'Model Training Log',
                'verbose_name_plural': 'Model Training Logs',
                'db_table': 'model_training_logs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='PredictionAccuracy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_start_date', models.DateField(verbose_name='Evaluation Start Date')),
                ('evaluation_end_date', models.DateField(verbose_name='Evaluation End Date')),
                ('total_predictions', models.IntegerField(default=0, verbose_name='Total Predictions')),
                ('correct_predictions', models.IntegerField(default=0, verbose_name='Correct Predictions')),
                ('accuracy_percentage', models.FloatField(default=0.0, verbose_name='Accuracy Percentage')),
                ('mean_absolute_error', models.FloatField(blank=True, null=True, verbose_name='Mean Absolute Error')),
                ('root_mean_square_error', models.FloatField(blank=True, null=True, verbose_name='Root Mean Square Error')),
                ('mean_absolute_percentage_error', models.FloatField(blank=True, null=True, verbose_name='Mean Absolute Percentage Error')),
                ('calculated_at', models.DateTimeField(auto_now_add=True, verbose_name='Calculated At')),
            ],
            options={
                'verbose_name': 'Prediction Accuracy',
                'verbose_name_plural': 'Prediction Accuracy',
                'db_table': 'prediction_accuracy',
                'ordering': ['-calculated_at'],
            },
        ),
        migrations.CreateModel(
            name='StockPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_date', models.DateField(verbose_name='Prediction Date')),
                ('input_sequence_start', models.DateField(verbose_name='Input Sequence Start Date')),
                ('input_sequence_end', models.DateField(verbose_name='Input Sequence End Date')),
                ('predicted_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Predicted Price')),
                ('confidence_score', models.FloatField(blank=True, null=True, verbose_name='Confidence Score')),
                ('prediction_range_low', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Prediction Range Low')),
                ('prediction_range_high', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Prediction Range High')),
                ('actual_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Actual Price')),
                ('prediction_error', models.FloatField(blank=True, null=True, verbose_name='Prediction Error')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Stock Price Prediction',
                'verbose_name_plural': 'Stock Price Predictions',
                'db_table': 'stock_predictions',
                'ordering': ['-created_at'],
            },
        ),
    ]
