# Generated by Django 5.2.4 on 2025-08-18 18:51

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=10, unique=True, verbose_name='Stock Symbol')),
                ('name', models.CharField(max_length=100, verbose_name='Stock Name')),
                ('exchange', models.CharField(max_length=10, verbose_name='Exchange')),
                ('sector', models.CharField(blank=True, max_length=50, null=True, verbose_name='Sector')),
                ('industry', models.CharField(blank=True, max_length=100, null=True, verbose_name='Industry')),
                ('market_cap', models.BigIntegerField(blank=True, null=True, verbose_name='Market Cap')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Company Description')),
                ('pe_ratio', models.FloatField(blank=True, null=True, verbose_name='P/E Ratio')),
                ('pb_ratio', models.FloatField(blank=True, null=True, verbose_name='P/B Ratio')),
                ('dividend_yield', models.FloatField(blank=True, null=True, verbose_name='Dividend Yield')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Stock',
                'verbose_name_plural': 'Stocks',
                'db_table': 'stocks',
                'ordering': ['symbol'],
            },
        ),
        migrations.CreateModel(
            name='StockDataImportLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('import_type', models.CharField(choices=[('api', 'API Import'), ('excel', 'Excel Import'), ('csv', 'CSV Import')], max_length=20, verbose_name='Import Type')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('success', 'Success'), ('failed', 'Failed')], default='pending', max_length=20, verbose_name='Status')),
                ('file_path', models.CharField(blank=True, max_length=255, null=True, verbose_name='File Path')),
                ('total_records', models.IntegerField(default=0, verbose_name='Total Records')),
                ('success_records', models.IntegerField(default=0, verbose_name='Success Records')),
                ('failed_records', models.IntegerField(default=0, verbose_name='Failed Records')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Error Message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Stock Data Import Log',
                'verbose_name_plural': 'Stock Data Import Logs',
                'db_table': 'stock_data_import_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('source', models.CharField(max_length=100, verbose_name='Source')),
                ('url', models.URLField(blank=True, null=True, verbose_name='URL')),
                ('published_at', models.DateTimeField(verbose_name='Published At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news', to='stocks.stock', verbose_name='Stock')),
            ],
            options={
                'verbose_name': 'Stock News',
                'verbose_name_plural': 'Stock News',
                'db_table': 'stock_news',
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='StockPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('open_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Open Price')),
                ('high_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='High Price')),
                ('low_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Low Price')),
                ('close_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Close Price')),
                ('volume', models.BigIntegerField(verbose_name='Volume')),
                ('ma_5', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='5-Day MA')),
                ('ma_10', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='10-Day MA')),
                ('ma_20', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='20-Day MA')),
                ('ma_50', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='50-Day MA')),
                ('ema_12', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='12-Day EMA')),
                ('ema_26', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='26-Day EMA')),
                ('macd', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='MACD')),
                ('macd_signal', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='MACD Signal')),
                ('macd_histogram', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='MACD Histogram')),
                ('rsi', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='RSI')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='stocks.stock', verbose_name='Stock')),
            ],
            options={
                'verbose_name': 'Stock Price',
                'verbose_name_plural': 'Stock Prices',
                'db_table': 'stock_prices',
                'ordering': ['-date'],
                'unique_together': {('stock', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserFavoriteStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='stocks.stock', verbose_name='Stock')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_stocks', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Favorite Stock',
                'verbose_name_plural': 'User Favorite Stocks',
                'db_table': 'user_favorite_stocks',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'stock')},
            },
        ),
    ]
